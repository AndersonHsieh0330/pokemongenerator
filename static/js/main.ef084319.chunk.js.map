{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["App","useState","search","setSearch","pokemonCount","setPokemonCount","pokemon","setPokemon","useEffect","min","max","Axios","get","Math","ceil","floor","random","then","response","console","log","data","count","url","pokemonURL","results","name","img","sprites","front_default","type","types","className","onClick","src","map","i","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6NAAe,I,4BCqEAA,MApDf,WAEE,MAA4BC,oBAAS,GAArC,mBAAOC,EAAP,KAAeC,EAAf,KAGA,EAAwCF,mBAAS,MAAjD,mBAAOG,EAAP,KAAqBC,EAArB,KAEA,EAA8BJ,mBAAS,IAAvC,mBAAOK,EAAP,KAAgBC,EAAhB,KA6BA,OA3BDC,qBAAU,WAfX,IAAsBC,EAAKC,EAgBzBC,IAAMC,IAAN,6DAhBoBH,EAgBwD,EAhBnDC,EAgBqDN,EAf9EK,EAAMI,KAAKC,KAAKL,GAChBC,EAAMG,KAAKE,MAAML,GACVG,KAAKE,MAAMF,KAAKG,UAAYN,EAAMD,GAAOA,MAc/CQ,MAAK,SAAAC,GACJC,QAAQC,IAAR,8BAAmCF,EAASG,KAAKC,MAAjD,cACAjB,EAAgBa,EAASG,KAAKC,OAE9B,IAQgBC,EARZC,EAAaN,EAASG,KAAKI,QAAQ,GAAGF,IAC1CJ,QAAQC,IAAR,qCAA0CI,IAEzB,OAAdA,IAKaD,EAJLC,EAKbb,IAAMC,IAAIW,GACTN,MAAK,SAAAC,GACJX,EAAW,CACTmB,KAAKR,EAASG,KAAKK,KACnBC,IAAIT,EAASG,KAAKO,QAAQC,cAC1BC,KAAKZ,EAASG,KAAKU,QAErBZ,QAAQC,IAAId,YAXV,CAACJ,IAiBH,sBAAK8B,UAAY,MAAjB,UACG,sBAAKA,UAAY,WAAjB,UACG,mDACA,mDACA,wBAAQC,QAAW,kBAAI9B,GAAWD,IAAlC,uBAEH,sBAAK8B,UAAY,UAAjB,UACG,4BAAI1B,EAAQoB,OACZ,qBAAKM,UAAY,aAAaE,IAAK5B,EAAQqB,MAC1CrB,EAAQwB,KAAKK,KAAI,SAAAC,GAAC,OAAI,4BAAIA,EAAEN,KAAKJ,iBCnD7BW,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBtB,MAAK,YAAkD,IAA/CuB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.ef084319.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport './App.css';\nimport { useEffect, useRef, useState } from 'react';\nimport Axios from \"axios\";\n\nfunction Pokemon(){\n  const [pokemon, getPokemon] = useState(null)\n  \n  return \n}\n\nfunction getRandomInt(min, max) {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min) + min); //The maximum is exclusive and the minimum is inclusive\n}\n\nfunction App() {\n  //state for \"search button\" click\n  const [search, setSearch] = useState(false)\n\n  //on Oct 20, 2021 the count is 1117, update the count after first request\n  const [pokemonCount, setPokemonCount] = useState(1117)\n\n  const [pokemon, setPokemon] = useState({})\n\n useEffect(()=>{\n  Axios.get(`https://pokeapi.co/api/v2/pokemon/?limit=1&offset=${getRandomInt(1,pokemonCount)}`)\n  .then(response => {\n    console.log(`There are currently ${response.data.count} pokemons`)\n    setPokemonCount(response.data.count)\n    \n    let pokemonURL = response.data.results[0].url\n    console.log(`currnet pokemon found url: ${pokemonURL}`)\n    \n    if(pokemonURL!== null){\n    getPokemon(pokemonURL)}\n })}, [search])\n\n\nfunction getPokemon(url){\n  Axios.get(url)\n  .then(response =>{\n    setPokemon({\n      name:response.data.name,\n      img:response.data.sprites.front_default,\n      type:response.data.types\n    })\n    console.log(pokemon)\n  })\n\n}\n\n  return (\n    <div className = \"App\">\n       <div className = \"TitleBox\">\n          <h1>Pokemon Generator</h1>\n          <h3>by Anderson Hsieh</h3>\n          <button onClick = {()=>setSearch(!search)}>Search</button>\n       </div>\n       <div className = \"DataBox\">\n          <p>{pokemon.name}</p>\n          <img className = \"PokemonIMG\" src={pokemon.img}></img>\n          {pokemon.type.map(i => <p>{i.type.name}</p>)}\n       </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}